<UserControl 
	x:Class="KsWare.AppVeyorClient.UI.PanelConfiguration.ConfigurationPanelView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:aee="clr-namespace:KsWare.AppVeyorClient.Shared.AvalonEditExtension"
    xmlns:panelConfiguration="clr-namespace:KsWare.AppVeyorClient.UI.PanelConfiguration"
    xmlns:viewModels="clr-namespace:KsWare.AppVeyorClient.UI.ViewModels"
    xmlns:ksv="http://ksware.de/Presentation/ViewFramework"
    xmlns:kslab="http://ksware.de/Presentation/Labs"
    xmlns:input="clr-namespace:KsWare.Presentation.Input"
    mc:Ignorable="d" 
    d:DesignHeight="300" d:DesignWidth="700"
	d:DataContext="{d:DesignInstance Type={x:Type panelConfiguration:ConfigurationPanelVM}}"
>
<FrameworkElement.Resources>
	<ResourceDictionary>
		<ResourceDictionary.MergedDictionaries>
			<kslab:SharedResourceDictionary Source="pack://application:,,,/KsWare.AppVeyorClient;component/UI/Resources/Generic.xaml" />
		</ResourceDictionary.MergedDictionaries>
	</ResourceDictionary>
</FrameworkElement.Resources>
	<DockPanel>
		<UIElement.InputBindings>
			<KeyBinding Key="H" Modifiers="Control" Command="{Binding OpenReplaceDialogAction}" />
		</UIElement.InputBindings>
		<panelConfiguration:PopupView DataContext="{Binding Popup}" IsOpen="{Binding IsOpen}" AllowsTransparency="True" StaysOpen="True"/>

		<WrapPanel DockPanel.Dock="Top" IsEnabled="{Binding YamlEditorController.IsEnabled}">
			<FrameworkElement.Resources>
				<Style x:Key="ButtonStyle" TargetType="Button">
					<Setter Property="MinWidth" Value="40"/>
					<Setter Property="Margin" Value="2"/>
				</Style>
				<Style TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
					<Setter Property="MinWidth" Value="40"/>
					<Setter Property="Margin" Value="2"/>
				</Style>
			</FrameworkElement.Resources>
			<Button Content="Get" Command="{Binding GetAction}" ToolTip="Gets the configuration from appveyor.com."/>
			<Button Content="Send" Command="{Binding PostAction}" ToolTip="Send the configuration to appveyor.com">
				<Button.Style>
					<Style TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding IsModified}" Value="false">
								<Setter Property="Foreground" Value="#A0A0A0"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Button.Style>
			</Button>
			<Canvas Width="6"/>
			<Button Content="Load" Command="{Binding LoadAction}" ToolTip="Loads the configuration from file."/>
			<Button Content="Save" Command="{Binding SaveAction}" ToolTip="Saves the configuration to file."/>
			<Canvas Width="12"/>
			<Button Content="Edit Block" Command="{Binding EditScriptBlockAction}" ToolTip="Edit selected script block" Padding="6 0"/>
			<Button ToolTip="Navigate to AppVeyor CI" Command="{Binding OpenAppVeyorAction}" MinWidth="22">
				<Image Source="/KsWare.AppVeyorClient;component/Ressources/appveyor-favicon-16x16.png" Height="15" />
			</Button>
			<Button ToolTip="Navigate to GitHub" Command="{Binding OpenGitHubAction}" MinWidth="22">
				<Image Source="/KsWare.AppVeyorClient;component/Ressources/github-favicon.png" Height="15" />
			</Button>
			<ComboBox SelectedItem="{Binding SelectedEnvironmentVariable}" ItemsSource="{Binding EnvironmentVariables}" IsTextSearchEnabled="True" IsTextSearchCaseSensitive="False" TextSearch.TextPath="Name" IsEditable="True" Width="180" Margin="5 0 0 0">
				<ComboBox.ItemTemplate>
					<ItemContainerTemplate DataType="{x:Type panelConfiguration:EnvironmentVariableInfo}">
						<DockPanel>
							<TextBlock Text="{Binding Name}" Width="200"/>
							<TextBlock Text="{Binding Description}" MinWidth="300" TextTrimming="CharacterEllipsis" ToolTip="{Binding Description}"/>
						</DockPanel>
					</ItemContainerTemplate>
				</ComboBox.ItemTemplate>
			</ComboBox>
			<Button Content="V" ToolTip="Insert Variable" Command="{Binding InsertVariableAction}" MinWidth="22"/>
			<Button Content="i" ToolTip="Context Help" Command="{Binding ContextHelpAction}" MinWidth="22" FontFamily="Webdings" FontSize="15" Foreground="#3030FE"/>
			<Button ToolTip="Validate YAML" Command="{Binding ValidateYamlAction}" MinWidth="22">
				<TextBlock FontFamily="Wingdings" FontSize="13" FontWeight="Bold">
					<Run Text="D" Foreground="Red"/><Run Text="C" Foreground="DarkGreen"/>
				</TextBlock>
			</Button>
			<Button Content="a" ToolTip="Encrypt Value" Command="{Binding EncryptAction}" MinWidth="22" FontFamily="Wingdings" />
		</WrapPanel>
		<StatusBar DockPanel.Dock="Bottom">
			<StatusBarItem>
				<TextBlock Text="{Binding StatusBarText}" />
			</StatusBarItem>
		</StatusBar>
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="{Binding YamlEditorHeight}"/>
				<RowDefinition Height="{Binding CodeEditorHeight}"/>
			</Grid.RowDefinitions>
			<DockPanel IsEnabled="{Binding YamlEditorController.IsEnabled}">
				<DockPanel.InputBindings>
<!--					<KeyBinding Command="{Binding SearchPanel.NextResultAction}" Key="F3" />-->
<!--					<KeyBinding Command="{Binding SearchPanel.PreviousResultAction}" Key="F3" Modifiers="Shift" />-->
<!--					<DataTrigger Binding="{Binding ElementName=CodeDigit1, Path=Text.Length}" Value="1">-->
<!--						<Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=CodeDigit2}" />-->
<!--					</DataTrigger>-->
				</DockPanel.InputBindings>
<!--				<i:Interaction.Triggers>-->
<!--					<i:EventTrigger EventName="PreviewKeyDown">-->
<!--						<common:KeyAction Key="F" Modifiers="Control" Target="{Binding ElementName=SearchTextBox}">-->
<!--						</common:KeyAction>-->
<!--					</i:EventTrigger>-->
<!--				</i:Interaction.Triggers>-->

				<StackPanel DockPanel.Dock="Top" Designtime.Visibility="Visible" Visibility="{VisibilityBinding YamlEditorController.IsEnabled, TrueVisibleElseCollapsed}">
					<DockPanel Margin="0">
						<ComboBox 
							Style="{StaticResource ComboBoxFlatStyle}" 
							ItemsSource="{Binding NavigationItems}"
							SelectedItem="{Binding SelectedNavigationItem}"
							Width="150"
							ToolTip="Navigation. Select an item to navigate to (if exists)"
							IsDropDownOpen="{Binding IsNavigationDropDownOpen}"
							>
							<ComboBox.ItemContainerStyle>
								<Style TargetType="ComboBoxItem">
									<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
								</Style>
							</ComboBox.ItemContainerStyle>
							<ComboBox.ItemTemplate>
								<DataTemplate DataType="{x:Type viewModels:NavigationItemVM}">
									<DockPanel>
										<TextBlock Text="T" DockPanel.Dock="Right" Visibility="{VisibilityBinding HasTemplate, TrueVisibleElseCollapsed}"/>
										<TextBlock x:Name="TextBlock" Text="{Binding DisplayName}" MinWidth="120"/>
									</DockPanel>
									
									<DataTemplate.Triggers>
										<DataTrigger Binding="{Binding ExistsInDocument}" Value="false">
											<Setter TargetName="TextBlock"  Property="Foreground" Value="LightGray"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding IsGroupTitle}" Value="true">
											<Setter TargetName="TextBlock"  Property="Foreground" Value="#8E8EFF"/>
											<Setter TargetName="TextBlock"  Property="FontWeight" Value="Bold"/>
										</DataTrigger>
									</DataTemplate.Triggers>
								</DataTemplate>
							</ComboBox.ItemTemplate>
						</ComboBox>
						<Button Content="+" Width="24" Command="{Binding InsertTemplate}" ToolTip="Insert section"/>
						<StackPanel Orientation="Horizontal" DockPanel.Dock="Right" DataContext="{Binding SearchPanel}">
							<TextBox 
								x:Name="SearchTextBox" 
								Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" 
								Width="150"
								ToolTip="Search: Type a word to highlight all occurrences."
								/>
							<TextBlock Text="{Binding CurrentResultIndex}" Foreground="LightGray" Margin="4 0 0 0"/>
							<TextBlock Text="/" Foreground="LightGray"  />
							<TextBlock Text="{Binding ResultCount}" Foreground="LightGray" />
							<Button 
								Content="" 
								Command="{Binding NextResultAction}" FontFamily="Wingdings 3" Width="18" Margin="4 0 0 0"
								ToolTip="Navigate to next occurrence."
								/>
							<Button 
								Content="" 
								Command="{Binding PreviousResultAction}" FontFamily="Wingdings 3" Width="18"
								ToolTip="Navigate to previous occurrence."
								/>
						</StackPanel>
						<Grid HorizontalAlignment="Stretch" Margin="5 0 5 0">
							<TextBlock Text="{Binding EditorProjectName}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" 
							           ToolTip="{Binding EditorProjectName}"/>
						</Grid>
					</DockPanel>
					<Line Height="1" Stroke="DarkGray" StrokeThickness="1" Y1="0.5" Y2="0.5" X2="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"  />
				</StackPanel>

				<avalonEdit:TextEditor
					xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
					Margin="0 0 0 6"
					SyntaxHighlighting="YAML"
					FontFamily="Consolas"
					FontSize="12pt"
					aee:TextEditorControllerBehavior.Controller="{Binding YamlEditorController}">
					<UIElement.InputBindings>
						<KeyBinding Key="F1" Command="{Binding ContextHelpAction}" />
						<KeyBinding Key="Escape" Command="{Binding EscapeAction}" />
						<KeyBinding Key="H" Modifiers="Control" Command="{Binding OpenReplaceDialogAction}" />
					</UIElement.InputBindings>
					<UIElement.CommandBindings>
						<input:CommandBindingMapper Command="ApplicationCommands.Help" CommandBinding="{RootBinding Path=ContextHelpAction}"/>
						<input:CommandBindingMapper Command="ApplicationCommands.Replace" CommandBinding="{RootBinding Path=OpenReplaceDialogAction}"/>
					</UIElement.CommandBindings>
					<avalonEdit:TextEditor.ContextMenu>
						<ContextMenu 
							DataContext="{Binding YamlEditorController.ContextMenu}"
							ItemsSource="{Binding Items}"
							>
							<ContextMenu.ItemContainerStyle>
								<!-- d:DataContext="{d:DesignInstance Type=ksvf:MenuItemVM}" -->
								<Style TargetType="MenuItem" >
									<Setter Property="ItemsSource" Value="{Binding Items}"/>
									<Setter Property="Header" Value="{Binding Caption}" />
									<Setter Property="Command" Value="{Binding CommandAction}" />
									<Setter Property="IsChecked" Value="{Binding IsChecked}" />
									<Setter Property="IsCheckable" Value="{Binding IsCheckable}" />
									<Style.Triggers>
										<Trigger Property="Header" Value="-">
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate>
														<Separator/>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Trigger>
									</Style.Triggers>
								</Style>
							</ContextMenu.ItemContainerStyle>
						</ContextMenu>
					</avalonEdit:TextEditor.ContextMenu>
				</avalonEdit:TextEditor>
			</DockPanel>

			<GridSplitter Grid.Row="0" Height="6" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Background="DarkGray" IsEnabled="False"/>
			<DockPanel Grid.Row="1" IsEnabled="{Binding CodeEditorController.IsEnabled}">
				<DockPanel DockPanel.Dock="Bottom" LastChildFill="False" HorizontalAlignment="Right">
					<ComboBox SelectedItem="{Binding BlockFormat}" Margin="2" Width="80">
						<system:String>(unchanged)</system:String>
						<system:String>Block</system:String>
						<system:String>Split</system:String>
						<system:String>Single</system:String>
					</ComboBox>
					<Button Content="Apply" Command="{Binding ApplyEditAction}" Margin="2" Padding="6 2"/>
					<Button Content="Cancel" Command="{Binding CancelEditAction}" Margin="2" Padding="6 2" />
				</DockPanel>
				<avalonEdit:TextEditor
					xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
					Margin="0 0 0 0"
					SyntaxHighlighting="PowerShell"
					FontFamily="Consolas"
					FontSize="12pt"
					aee:TextEditorControllerBehavior.Controller="{Binding CodeEditorController}"
					/>
<!--				<TextBox FontFamily="Consolas" FontSize="14"-->
<!--				         HorizontalScrollBarVisibility="Visible"-->
<!--				         VerticalScrollBarVisibility="Visible"-->
<!--				         common:TextBoxControllerBehavior.Controller="{Binding CodeTextBoxController}"-->
<!--				         IsInactiveSelectionHighlightEnabled="True"/>-->
			</DockPanel>
		</Grid>
	</DockPanel>
</UserControl>







